:mahāmantra(,mahāmantra,dex) 8≪ where ,dex is the addressable program counter
:mahāmantra() 8≪ ,mahāmantra

8≪ nāmas are declarative
:nāmamantra(
	,mantra 8≪ referentially opaque
	:mantra 8≪ referentially transparent by a (manual) process called memoisation; but no time/IO/RNG/ETC will automemoise
)

8≪ there can only be one ,mantra per ,nāma
:@(,nāma_a,nāma_b,nāma_c) 8≪ ,[,mantra_a,mantra_b,mantra_c]

 8<
 	there can be multiple ,nāmas per ,mantra
	but the dex/address should be included c̄ each ,nāma
	like a file path, where scopes are directories
>8
:#(,mantra_a,mantra_b,mantra_c) 8≪ ,[,nāmas_a,nāmas_b,nāmas_c]

8<
	we need a mantra that will
	dex the ,mantra
	dex the :mantra
	for any given :mantra ∨ ,mantra
	
	, ,()
	: :()
	...if it was...
	,, ()
	:: ()
	...where is the nāma? q:
	it's not...
	,, []
	:: []
	
	where there is ambiguity; minification will leave the whitespace alone
>8
,,(,mantra_a:mantra_b) 8≪ ,[,mantra_a,mantra_b]
::(,mantra_a:mantra_b) 8≪ ,[:mantra_a:mantra_b]

8≪ recursive box traversals
,,,(,mantra_a:mantra_b) 8≪ ,[,mantra_a,mantra_b]
:::(,mantra_a:mantra_b) 8≪ ,[:mantra_a:mantra_b]

different dīkṣā can be for lazy vs eager vs ETC

mantras should have typed mantras (& library) declarations; as an optional preprocessor (which should be the 1ˢᵗ declaration)
saves passing mantras in through the front door/lid/ETC to ensure they exist
