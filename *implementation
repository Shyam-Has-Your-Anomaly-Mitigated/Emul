to implement a mantra
declare a machine specification
this means machine specifications need to be included
and just translate between machine specifications
per generated implementation

i*d*k* about js though
and mixed implementations sounds awk

i need to make a virtual machine
lisp machine?
s*e*c*d* machine?
shyamscript machine is impossible; due to environmental dependencies (just like lambda calculus)
i need a machine that improves optimisation
http://www.primaryobjects.com/2013/01/27/using-artificial-intelligence-to-write-self-modifying-improving-programs/

oh, i forgot; higher-order hierarchical abstract machines f*t*w*!!! :D
https://en.wikipedia.org/wiki/Cellular_automaton
https://en.wikipedia.org/wiki/Bio-inspired_computing
https://en.wikipedia.org/wiki/Biological_computing
https://en.wikipedia.org/wiki/Biological_computation
https://en.wikipedia.org/wiki/Biocoenosis
https://en.wikipedia.org/wiki/Competition_(biology)
https://en.wikipedia.org/wiki/Natural_selection

is there a single strategy that can solve every"-thing"? like using dogs for computer vision, scent tracking,..
e*g* a maze ∘ islands makes it impossible for a wall follower to win
lets `rm` memorisation; amnesia-mode
now solve all solvable mazes
https://en.wikipedia.org/wiki/Maze_solving_algorithm
decisions're n directions (including back), where r*n*g* should eventually win
okay, so i can design an r*n*g* machine, but it'll be slow
i call this the r*n*g* strategy; total amnesia
…
if you get a birdseye view, instead ∘ the f*p*s* (first per(son) spective; whatever)
you could list all the decision points c̄ their directional counts (including back)
should you not be able to produce a string ∘ numbers?
no count the decision points
how many possible combinations? ∞? let's assume ∞ ∵ you can go in circles, or back ∧ forths
so find the decision point c̄ the most directions (m for maximum)
produce every permutation ∘ the interval [0,m) (p for permutations)
produce every p ∘ m ∘ every length starting c̄ the smallest
consume until win ∀ shortest ki? jaya!!! :D
i call this the groundhog day strategy; pseudo amnesia
…
lets `rm` amnesia; memory-mode
(and generalise; not just mazes)
it's been bruteforce so far, but i want intelligence
