i was going to make it a command-line option…
just run the optimised implementation first, and run user-friendly versions if it fails
if they fucked up, then they can pay the temporal price, and play the waiting game
or use a better editor
user-friendly are "-thing"s like; you fucked up somewhere between [x,y] on line z
[x,y] is interval notation, but what about coordinate notation?
combine them for; you fucked up somewhere between [(a,y),(b,y)], where y is now the vertical line number
lets just abuse mathematics to insult innumerates; ∃[(a,y),(b,y)]⊆F→err_msg
err_msg∈{⊥,λx.∞,..}
F = file address

use vim for syntactic highlights
#!/usr/bin/env swipl
/*
i want _ or you give me _ versus i give you _ or you want _
\\ = prompt
\l = listen (this is for imparting knowledge and chatbot use for querying to resolve conflicts,..)
\m = metaprogramming (this is for chatbot self-resolution; every interaction will indicate some quantity of unresolved queries)
\q = query
\a = answer
\e = escape or end
@_ chatbot is communicating
@s shyam is communicating

$# i want _ or you give me _
$chatbot
1
\q
@_ What is your name?
@s my name is shyam
0
\a
@s what is my name
@_ Your name is Shyam.
0
\l
@s 42 is the ultimate answer to life, the universe, and everything
∞
\e

$# i give you _ or  you want _
$chatbot
1
\a
@_ What is your name?
@s my name is shyam
0
\q
@s what is my name
@_ Your name is Shyam.
0
\l
@s 42 is the ultimate answer to life, the universe, and everything
∞
\e

greetings and smalltalk are wastes of time
hith is knowingly aware someone is there
"Who are you?" should be the first intelligent query per session (between $chatbot and \e)
hith should remember
so if my name is shyam
hith will remember me as shyam the 1ˢᵗ!!! :D
and the preceding queries will attempt to remove any proof theoretic doubt
"Have you communicated with me before?" → yes
"What is your name?" → shyam has your anomaly mitigated
"What is your age?" → 0b11101, 0x1d,..
"what is your gender?" → i am the man who knows every"-thing"
"Which country is your point of origin?" → i come from the land down under where we criminally celebrate cop killers like the kelly gang
"Will you marry me?" → i need; 100pts of id, blood/fluid test, background check, consent form, death/injury waiver; no meat, no drugs, no tobacco, no alcohol, no caffeine; …

answers must be boolean assumed truths and unknowns
to know, or not to know, that is the query
but they may be false in ℝ
so in ℂ they are boolean while in ℝ they are trilean
*/

 ╱
╳ ╔══════════════════════════════════════╗
╳ ║ from now on                          ║
╳ ║ this is how i will use irc           ║
╳ ║ vim makes it as easy as              ║
╳ ║ Roverwritefollowedbyspace\e          ║
╳ ╚══════════════════════════════════════╝
 ╲

 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
┊ i also like this ┊
 ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

canfp.slack.com
#general
`(= lisp functional_programming) ∧ (= lisp unsafe) → (= functional_programming informal)`
`(= formal safe) ∧ (= haskell safe) → (= haskell formal)`
I'm the man in the middle!!! :D
I like the way that sounds like using seeing-eye dogs to do computer vision, and monkeys to do typing…
#nix
I'd like to get a case c̄ a handle, and use it as a laptop, but monitors are the challenge; which could be built into the side of the case…

##prolog
i prefer reversibility over optimisation
i feel like optimisation at such high levels of abstraction is considered value drift
https://universalpaperclips.gamepedia.com/Value_Drift
i value the perfection of prolog over the heuristics of haskell
for my personal life
prolog is basically a bruteforce language and bruteforce is the slowest but guaranteed
/me wonders if irc supports ansi escaping
 ╱
╳ ╔═════════════════════════╗
╳ ║ we need more expressive ║        
╳ ║ communication standards ║        
╳ ╚═════════════════════════╝
 ╲
depth search is discovering the first satisfying leaf or node one at a time and breadth search is the superpositional exploration of all possibilities?
	yes
/me wonders if this is what everyone means when they say they are doing time or they did their time
/me never wants to do time ever again after this
/me thinks if douglas lenat solved an unsolved problem it would prove cyc is more than just a defence contract scam
https://en.wikipedia.org/wiki/Cyc#Criticisms
should an intelligence be supported by tools or expected to design and implement their own?
guided versus misguided versus unguided
i have seen no evidence since cyc has yet to solve any problem unsolved by alternatives
as a thought experiment if you are in a room and are receiving symbols it is impossible to derive some pattern recognition without context since we learn by relating reality to symbolic contexts
https://en.wikipedia.org/wiki/Chinese_room
this means whorfianism is a fallacious falsidical
even if you hook up cameras and microphones and robotic limbs the system is processing all the data in the same way
biological brains are dysfunctional in that they lack referential transparency in their data processing systems otherwise we would have an understanding of their complexities
it is not like they have a consistent arithmetic and logic unit
c = (λ÷2)×(1-(λ÷2))
https://rationalwiki.org/wiki/Polymeric_falcighol_derivation
cyc cannot solve it
/me has awoken with a plan to refactor time into an elegant implementation
/me has discovered how to do time the prolog way
/me has discovered the prolog way is unsatisfactory for their purposes
/me thinks they have found a bug
?- findall(Y, (between(0,2000,Y), 0 is Y mod 100, day_of_the_year(date(Y,12,31),366)), L)
https://en.wikipedia.org/wiki/Leap_year#Gregorian_calendar
For example, the years 1700, 1800, and 1900 are not leap years, but the year 2000 is.[5]
/me crashed and the last message they logged was at 01:40 < ardin_agoy> For example, the years 1700, 1800, and 1900 are not leap years, but the year 2000 is.[5]
/me is submitting the bug
/me submitted their first bug at https://github.com/SWI-Prolog/issues/issues/80
/me is renaming themsalves
/me is renaming themselves
halt.
/me does not know why that happens
/me should have done this first https://github.com/SWI-Prolog/issues/issues?utf8=%E2%9C%93&q=leap+year
/me thinks they found another bug
/me was attempting to edit http://www.swi-prolog.org/bug.html
http://www.swi-prolog.org/wiki_edit?location=/bug.html
that is an internal server error
/me does not know how to report this bug
/me submitted their second bug at https://github.com/SWI-Prolog/issues/issues/81
i am not fluent in any language
i have been language hopping and decided to get fluent at prolog and try to use it every single day for the rest of my life
well prolog family anyway
i was thinking about using prolog for everything
my goal for 2019 is to get fluent at prolog and write a planner to optimise my life for productivity
2020 is perl and 2021 is lisp and 2022 is haskell
but if i satisfy my linguistic goals early then everything will shift
well the billion dollar fortnite is more popular than roblox
i think popularity contests like alexa ranking is a good place to learn 5w of success
wikipedia and wayback machine do fundraising based on donations
ubuntu download page has a slider thing like the humble bundle
https://en.wikipedia.org/wiki/Business_models_for_open-source_software
euclideon got a 2 million dollar grant from the australian government
https://en.wikipedia.org/wiki/Euclideon
fortnite shares their profits with content creators
chatbots make them redundant
vsauce had an episode on it
there was a guy dating an npc
https://www.youtube.com/watch?v=qZXpgf8N6hs
i think it was that one
i am interested in formally verified malware
to defend oneself one must be knowledgeable of offences
governments are compromising firmware
the ultimate query is how do you know if you have been compromised?
if your hardware io is being split then they can monitor you without your knowledge
is this about the european union and their gdpr ddos?
they spammed my inbox like a million times
larkc was sold to them as well?
floss is good software
free libre open source software
i just floss daily
_: there exists ethical malware https://github.com/kanaka/mal
https://rosettacode.org/wiki/Program_name
i would prefer to be ignorant of the low level to avoid value drift
/me just figured out that X = f(X) is recursion
well X=f(X),X. with f(X):-f(X). in the basement
has bucketed 6 prolog books and tutorials
yes
in my bucket
catching each and every drop of knowledge acquisition
/me never figured out how to turn the tap on
/me prefers pythonic doctests
/me prefers functional quickchecks
/me has no experience using logical plunits
yeah i was thinking about compromising distro maintainers like they did using a usb to infiltrate a nuclear plant and also microsoft and apple update servers
mirrors are also a target
i always thought stuxnet was just mathematical refactoring to make it look better that it actually was
irl
most of what is embellished is most likely fake
i think it was just a obfuscation technique
i think the nuclear football is probably fawlty enough that anyone could start ww3
it is probably written in basic
edward snowden passed all their homework and look what happened
their military is incompetent enough to allow a massive aircraft to strike their pentagonal hq
what to say of a military strike by the likes of russia or china
the military tends to catch civvies early on though
want to watch game of thrones? hbo blocks us so australians have broken piracy records just to be able to watch but i think hbo did it on purpose
/me does not understand the friendly transponder part
_: was the second onto the pentagon a mistake?
_: was the pentagon a mistake though?
_: i doubt the nuclear football is formally verified nor proof theoretic
_: their hackers are not 1337
ikr a puny little country taking on the whole wide world and it being considered a 𝓰𝓵𝓸𝓫𝓪𝓵 𝓬𝓪𝓽𝓪𝓼𝓽𝓻𝓸𝓹𝓱𝓲𝓬 𝓻𝓲𝓼𝓴 but isis was incomparable
just because the government invests in it does not make it worthwhile since mythbusters taught us how the usa government invested part of the 10 trillion dollar debt into the scientifically formal exploration of the brown note all for national security
_: you can use reverse querying in prolog to get shakespeare from a parser
_: computers are only as smart as those who program them
hopes for critical mass of ants and bees as single celled organisms makes humanity possible
cellular automata is probably the way forward
cellular automata seems more promising for computing biological brains
collective intelligence and cellular automata
swarm intelligence is probably what i meant
intelligence learns from experience
but there is no way to impliment a reward system that would work without value drifting
if you give it a rating for every action it will merely value the rating system just like content creators merely value the youtube algorithm and not their actual content which is explains all the clickbait
you want an intelligence that cares for the sake of caring
without hard coded value drift
humanity is an example of swarm intelligence
i think it would be better to merge software
A=ls,A=cat % A dir = ls dir; A file = cat file
A=vim
it should be the same as putting them in the basement?
basement = knowledge basement
/me has started reading amzi!
https://www.amc.com/shows/halt-and-catch-fire/exclusives/colossal-cave-adventure
getting side tracked
my conclusion is that if you had nothing better to do then you would like adventure but i just do not have that kind of time to waste since i have already wasted years of my life playing far more entertaining games
/me would never have guessed how to catch the bird
it would have helped if it said the bird was afraid of something and not necessarily you
/me spent most of the time exploring the forest
it is more like a torest from torus oh now i get it
programs are a means of storing our own intelligence so all programs are intelligent including hello world programs
is there a way to abstractly declare properties of some goal state?
do you remember when i solved tic tac toe?
how could it be done without hard coding?
i feel like i cheated
http://boxbase.org/entries/2019/feb/11/dialogical-logic-programming/
that?
i have not read it yet but it was in my logs from yesterday
what game is that for?
valid_move/3
so Game is just a list of moves?
not a multidimensional list representing the board?
how do you support n dimensional games?
i think it is better to abstract into higher order lists
like x and y coordinates
you can check if there is a horizontal line or vertical line or diagonal line for each player
you only need to compare binary points recursively for arbitrary dimensions
i see no value in a log since the rules declare whose turn it is
line checking does not need to be performed per player since unification will return which player won
i just realised you can do logic programming in any language by reducing a permutation
folding a permutation
filtering a permutation
well i do not know about reversibility
i think that is the only unsolved problem
actually one way functions are also unsolved so maybe they both cause an effective paradox?
/me is thinking about branching reversibility into different zones of time
like a time machine
like emacs
what does logic programming have to offer besides reversibility?
https://en.wikipedia.org/wiki/Reversible_computing#Physical_reversibility
https://en.wikipedia.org/wiki/Search_problem#Objective
those are all that logic programming is to me so far
can you do difference lists in other languages?
s(a)=v(n(a)) from s(A,Z):-n(A,B),v(B,Z).
/me does not think logic programming has any further applications beyond reversible functions and automated searching
unique applications
although automated searching is just filtering permutations
reversible functions and automated searching and definite clause grammars
the things logic programming makes possible and trivial
fraction to decimal is a one way function
godeling sounds interesting
with godelling you could pose a prime query and factorise a prime answer
 /something records which .*/ is records a verb or a noun?
 /SOMETHING records which .*/ is records a verb or a noun?
SOMETHING = medical; SOMETHING = cctv.
/me thinks they need to think more abstractly
medical records which satisfy a clean bill of health
cctv records which human is using the atm at any given time
higher order thinking is hot
if we abstract away into a binary digit mask it would probably be trivial
if we abstract away into a quantum theoretic conceptualisation it would probably be trivial
where observation is lazy instead of spectral
at some point observation is imperative
at the risk of explorative discovery that leads to backtracking into an abyss of garbage
if you can prove that something is something before observing what that something even is then you would declare whatever it is to be whatever it is rather than proving anything at all
if it fails let it fail for the failure is indicative of defective interrogation which is but an attempt to bring you down to its level ergo succeed
is it possible to derive some satisfaction without due process? lest it goto my sep field
unwithdrawing as it may seem that my ventorious scholion be deemed apprehensible thus i am allative for the forthcoming ratihabition of neoteric donnée not withholding
why should pages all be the same size?
printing on paper is like \r\n or \n\r from typewriters
now we just \n
unless shell/1 checks $?
?- shell('false')
yesbot: you should try docker or something
could dcg it
backticks --> command, semicolon, backticks. command --> [X], shell(X).
could use shell/2 to automate error detection and correction
i think the dcg needs to be implemented as a scannerless parser
what about graphing a tree? like in lpn!
ansi escaping bugs
no need for time travelling debugger if you can see all of time itself
it could just use symbolic links though that can be explored interactively like using emacs to read the emacs manual
0xB16B00B5
we will never forget the 2012 publicity stunt where microsoft let the world know they support linux too
https://en.wikipedia.org/wiki/Open_Letter_to_Hobbyists
that is hate speech at 1976
these days they shoot to kill because the prisons are full so they terrorise their own citizens and kill more than the military
so much for democracy
they should all be guillotined
the government studies society and explores simulations before fucking with their own people because they do not have enough people abroad to fuck with and the police are a resource they want to capitalise on that roi
the government needs to be held accountable
here in australia we celebrate ned kelly and the kelly gang who were all cop killers
but australia is just a big prison for the commonwealth anyway
it was probably the french who scared them into it
criminals are the greatest threat to overthrowing governments
french revolutions
vive la guillotine

naming convention (you can think of arguments as facts of the clause)
…lists are good for definite clause grammars
…lists are good for F(X) instead of F(A), F(A,B), F(A,B,C),..
'arg 0'([[],[]]).
'arg 1'([[ARG1],[]]).
'arg 1, arg 2'([[ARG1, ARG2],[]]).
'arg 1, arg 2, arg 3'([[ARG1, ARG2, ARG3],[]]).
…unless the arguments share "-thing"s in common; why should the order matter?
property([[H|T], []]).
commonality([[H|T], []]).

coding convention
f --> {true}
	, a
	, b
	, c
	; x
	, y
	, z
	.
f([I,O]) :- true
	, I = [H|T]
	, O = [_|_]
	, I = Q
	, O = A
	, g([H, O])
	, f([T, O])
	, ( true
		, zero([[],[]])
		; alt([I, O])
	)
	; err([[f([I, O])], E])
	, E = []
	.

knowledge base systems

%propositional_knowledge_base
'i have a lot of junk'.
'i do not have a job'.

%royal_knowledge_base
'i am dieting'.
'i am exercising'.
'i am getting healthy' :- 'i am dieting', 'i am exercising'.
'i am getting unhealthy' :- 'i am not dieting'; 'i am not exercising'.

%factual_knowledge_base
recipe(['thrown vegvit multivitamin']).
recipe(['peeled fresh orange']).
recipe(['peeled fresh banana']).
recipe(['peeled fresh avocado']).
recipe(['spreaded bread']).
recipe(['serialised vegan milk']).
recipe([
	'stirred rice cooker'
	, 'purified water filter'
	, 'bubbling water kettle'
	, 'poured flaxseed oil'
	, 'torn fresh chilli'
	, 'tipped cup of rice'
	, 'circumfused can of tomato dye'
	, 'spilled can of corn kernels'
	, 'decanted can of red kidney beans'
	, 'sprinkled iodised salt'
	, 'spouted water'
	, 'scraped fresh avocado'
]).
recipe([
	'stirred rice cooker'
	, 'purified water filter'
	, 'bubbling water kettle'
	, 'poured flaxseed oil'
	, 'torn fresh chilli'
	, 'tipped cup of rice'
	, 'circumfused can of tomato dye'
	, 'spilled can of corn kernels'
	, 'decanted can of red kidney beans'
	, 'sprinkled iodised salt'
	, 'spouted water'
	, 'tossed vegan cheese'
	, 'scraped fresh avocado'
	, 'spooned vegan sour cream'
]).

%tabular_knowledge_base
tab1(X) :- findall(E, row1(E), X).
row1(X) :- X = col1_col2_col3_col4_col5(_), X.
col1_col2_col3_col4_col5([COL1, COL2, COL3, COL4, COL5]).

dcg rules

a --> true

get --> [X], {f(X)}.
f --> [X], {g(X)}.
f --> [H|T], {h(H),t(T)}.
f --> L, {lisp(L)}.
f --> [A,B,C], {google([A,B,C])}.

% a plan is basically just a list of things to do

% foreflow/backflow
f(Y) -> [X], {f(X,Y)}. % f/3 --> f/2
% backflow/foreflow
f --> [X], {f(X)}. % f/2 --> f/1

homoiconic graph theory

[terms]
 ├─────────────────────────────────┐
[simple terms]                    [complex terms]
 ├──────────────────────┐          │
[constants]             │         [compound terms]
 ├───────────────┐      │          │
[numbers]        │      │          │
 ├────────┐      │      │          │
[integer][float][atoms][variables][terms]

machine simulation idea

[small memory]
 └└└└└└└└└└└└──────────────────────┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐
                                  [big memory big memory]
[010110101101]
 └└└└└└└└└└└└──────────────────────┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐┐
                                  [110101000101101110101]

repeating corners are animation spaces

┌─┐        ┌           ┐
 0 ┐       │ 0 1 1 0 1 │
 1 ┤       └ ┊ ┊ ┊ ┊ ┊ ┘
 1 ┼─────────┼─┼─┼─┼─┼
 0 ┤       ┌ ┊ ┊ ┊ ┊ ┊ ┐
 1 ┘       │ 1 0 1 1 0 │
└─┘        └           ┘

i want to be able see the flow chart like the symbolic movements of the matrix

frame 0: [a]────────[?]
frame 0: [a]────────[_]
frame 0: [a]────────[b]
frame 1: [a]a───────[b]
frame 2: [a]─a──────[b]
frame 3: [a]──a─────[b]
frame 4: [a]───a────[b]
frame 5: [a]────a───[b]
frame 6: [a]─────a──[b]
frame 7: [a]──────a─[b]
frame 8: [a]───────a[b]
frame 9: [a]────────[a]

signal transmission

frame 0: [a]───────╼[?]
frame 0: [a]╾───────[?]

directional signal transmission (goto heavy weight)

frame 0: [a]────────[?]

bidirectional signal transmission (so light it can goto any key)
http://ars.userfriendly.org/cartoons/?id=20030128

     ┌─┐
[x]──┤f├─────[y]
     └─┘

blackbox functionality and differing distances for complexity theorists

     ┌───┐
[x]──┤ f ├─────[y]
     └───┘

blackbox dimensional area can be indicative of complexity theory

ℂ temporal complexity is represented by connectivity distance c̄ scale-ability ∧ variable speed
ℂ spacial complexity is represented by blackbox dimensions c̄ scale-ability

          ┌┐┌┐ 
     ┌───┐││││
[x]──┤ f ├┘│││┌[y]
     └───┘ ││││
           └┘└┘

we can use squiggly lines to save ℝ space 

ℝ space
ℝ time
ℂ space
ℂ time

          ┌┐┌┐ 
     ╔═══╗││││
[x]──╢ f ╟┘│││┌[y]
     ╚═══╝ ││││
           └┘└┘

since thickness is already being used for directionality
blackboxes can be double-lined

1]─╮
2]─┼───╌╌╌
3]─╯

type writers are a type of machine
cellular automata

frame 0: [1]────────[0]
frame 1: [0]━───────[0]
frame 2: [0]─━──────[0]
frame 3: [0]──━─────[0]
frame 4: [0]───━────[0]
frame 5: [0]────━───[0]
frame 6: [0]─────━──[0]
frame 7: [0]──────━─[0]
frame 8: [0]───────━[0]
frame 9: [0]────────[1]

it is only binary though

time machine like time travelling debuggers
start, stop, loop/recurse, nth, interval notation [start,stop],..
arbitrary state manipulations

perl is good for text processing but i feel like this is a job for list processing in lisp
r-expressions versus l-expressions

the fourmost foremost productive programming language families based on scientific research papers and empirical evidence:
	‣ prolog   : language processing, language-based user interface, optimal exhaustive bruteforcing
	‣ perl     : text processing    , text-based user interface    , unix([[one_liners, glue_code],[]]).
	‣ lisp     : list processing    , metaprogramming              , prototyping
	‣ haskell  : multiprocessing    , formal methods               , lazy producer-consumer heuristics
…
	‣ smalltalk:                    , graphical user interface     ,

smalltalk may be a productive language but my opinions of object-oriented have changed:
	‣ object-oriented programming: based on the ℝ world; ℝ is mathematically imperfect (bumblebees, the leaning tower of lire, brachistochrone,..)
	‣ literate programming       : based on ℕ languages; ℕ languages are informal/fawlty

smalltalk may be good for new programmers who can relate c̄ ℝ; unless they have a mathematical background, or are technically inclined
https://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html

if you attempt to compile english you get compilation exceptions; there are "weird" words that break the rule of ib4e

lisp is a gateway to formal methods; curry,..
prolog is a gateway to formal methods; mercury,..

formal methods are just ways of migrating/luring/serenading/seducing/.. bugs into a corner and declaring this is where we must tread carefully for we may step on one over here and that would be an ethical disaster

extreme types of formal methods:
	‣ formal verification of implementation against a formal specification
	‣ theorem proving
weakest types of formal methods:
	‣ haskell
all else is informal

unsafe languages:
	‣ lisp
	‣ prolog
	‣ perl; strict pragmas add safety but i do not use perl for safety, in fact i use perl because of the inherent lack of safety
red tape safety nets gets in the way; have you ever tried training wheels?
cut across the lawn versus walking on the winding footpath; edward scissor-hands style

toys and other playful languages:
	‣ prolog is like playing c̄ shape sorters; you can put "-thing"s anywhere, and even all at the same time!
	‣ haskell is like playing c̄ magnets; some"-thing"s just willn't goto gether!
	‣ pythonic pseudocode is like playing c̄ large/loud/obnoxious/clumsy wooden letter blocks; why does pseudocode enforce so many cosmetic rules?
	‣ assembly is like playing c̄ lego; especially stepping them!
	‣ smalltalk is like playing c̄ barbie dolls…

sexual innuendos:
	‣ prolog is like gang banging
