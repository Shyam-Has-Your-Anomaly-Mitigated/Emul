_ = a single character
patterns; max word size = 3
	_
	__
	___
	_ _
	____
	_ __
	__ _
	_____
	__ __
	_ ___
	___ _
	_ _ _
	…
max word size = longest word in whatever language
language structure…
syntax/semantics…
rosetta stone…

mathematics is similar, but…
domain-specific languages…
universal languages…
alphabet letters ∈ {,─,┴,┬,┼,├,┤,┘,┐,┌,└,│} …might just use english letters for now
definitions are language dependent…
only use what you need…
basically the same as linguistics…
but the idea is to further understanding…
…
unsigned base 4:
	श्याम = ┼
	2    = ┬
	1    = ┴
	0    = ─
signed base 3:
	∓श्याम = ┼
	+1    = ┴
	±0    = ─
	-1    = ┬
	∓श्याम = ┼
unsigned base 16:
	श्याम = ├┤
	14   = ┌┤
	13   = └┤
	12   = ├┐
	11   = ├┘
	10   = ┌┐
	09   = ─┤
	08   = ┌┘
	07   = └┐
	06   = ├─
	05   = └┘
	04   = ─┐
	03   = ┌─
	02   = ─┘
	01   = └─
	00   = ──
signed base 16:
	∓श्याम = ├┤
	+07   = └┐
	+06   = ├┐
	+05   = ├┘
	+04   = ├─
	+03   = └┘
	+02   = ─┘
	+01   = └─
	±00   = ──
	-01   = ─┐
	-02   = ┌─
	-03   = ┌┐
	-04   = ─┤
	-05   = ┌┤
	-06   = └┤
	-07   = ┌┘
	∓श्याम = ├┤
…
numbers =
	├─┼┴┼┬─┴┘
functions =
	┬
	│
	┼
	├
	┼
	┤
	│
	├
	└
functions are numerical…
parameter syntax =
	┌ │          |          |          ┐
	│ │ number_a | number_b | number_c │
	└ |          |          |          ┘
parameter syntax =
	┌- │|          │|          │|          -┐
	│| │| number_a │| number_b │| number_c |│
	└- │|          │|          │|          -┘
functions ≠ parameter syntax … or parameter syntax are functions
parameters can stack numbers vertically, but this must be defined =
	a b
	c d
	…
	a b
	d c
	…
	a c
	b d
	…
	a d
	b c
	…
	a c
	d b
	…
	a d
	c b
	…
decimal syntax =
	┬
	┴
decimal syntax is a function…
…
use natural language to define every"-thing" (for now); including number/function systems (size)…
number_structure = natural_language_variables
number_size = x
function_size = 3 = {,a,b,c}
a = equality_definition
b = addition_definition
c = subtraction_definition
using the functions…goto start of file…
exempli gratia:
	a(,x,y,z)
	a(,b(,z,x),c(,x,y))
	…
	_[,_,_,_]
	_[,_[,_,_],_[,_,_]]
compare different systems, and their uses…
looking for similarities/understanding/..
minimal proof complexity

shyamscript-style…

https://github.com/Shyam-Has-Your-Anomaly-Mitigated/Shyamscript/blob/master/log/parameterised.sh

https://en.wikipedia.org/wiki/Iverson_bracket
https://en.wikipedia.org/wiki/Interval_(mathematics)#Notations_for_intervals
https://en.wikipedia.org/wiki/Set-builder_notation
https://en.wikipedia.org/wiki/Set_notation
https://en.wikipedia.org/wiki/Knuth%27s_up-arrow_notation
https://en.wikipedia.org/wiki/Caret_notation
https://en.wikipedia.org/wiki/Scientific_notation
https://en.wikipedia.org/wiki/Engineering_notation

…what happened to the other _file? i'm sure there was a second one! but i also remember deciding not to upload one…

shyamskrit
nᵗʰ as a number: "function n", "equation n",..
number └─┘└┘└┘└───┘└┘ used in a sentence
       ┌─┐┌──┐┌┐┌────
number └─┘└┘└┘└───┘└┘
       ┌─┐┌──┐┌┐┌──── used in a sentence
       └─┘└┘└┘└───┘└┘ used in a sentence
number ┌─┐┌──┐┌┐┌────
       └─┘└┘└┘└───┘└┘
number ┌─┐┌──┐┌┐┌──── used in a sentence
number ╞═╬╩╬╦═╩╛ used in a sentence
number ╠═╬╩╬╦═╩╝ used in a sentence
number ├─┼┴┼┬─┴┘ used in a sentence
…also; error controlled syntax/semantics/grammar/..

# who are you talking to? put most important/productive/useful information first!
name=world;
name=computer;
echo "$name prabhu namaste"; # do not waste others time/attention, be respectful/formal, and greetings; think about what you want to communicate, then speak too rapidly for punctuation to matter, or be distinguishable
echo "Hello, Mr. $Name!"; # first word wastes everybody elses time/attention, second word narrows down, third word filters/singles out an individual; it is almost like you don't even know who you are speaking to at the beginning, and are in the process of making up your mind
# say "Hello" whilst grabbing ladies hand to check (un)ringed finger to decide whether to follow c̄ "Ms." or "Mrs."; it is feminine/submissive to be approached/receptive ∴ there is no distinction of masculinity/dominance

# having uppercase & lowercase retards education; more rules to learn, but it's not like nouns/verbs/adjectives/.. each have their own visual distinctions (and "-thing"s like verbal nouns retard education even further)
# it is theorised that case-sensitive languages have more retards; shyamskrit is a therapeutic/medical treatment (attempt to patch a bug, and another appears; dyslexia is cured by fonts though, and shyamskrit fonts cannot be proprietary)

controls (maths can probably be aligned)
|␣
␣|
␣. (high/low dots)
.␣ (high/low dots)
:␣
␣:
‾
_

<3 dots is for control ∵ that is how we feel about control (we wants it)

down = /\n/
down* = /\n*/
left = /\r/
left* = /\r*/
right = /\r\r\r/
right* = /(\r\r\r)*/
up = /\n\n\n/
up* = /(\n\n\n)*/

s = up
e = left
w = right
n = down
se = es = s e = e s
sw = ws = s w = w s
ne = en = n e = e n
nw = wn = n w = w n
se* = e*s = s e* = e* s
sw* = w*s = s w* = w* s
ne* = e*n = n e* = e* n
nw* = w*n = n w* = w* n

need shortcuts for commonalities like line delimiters and indentation

boxes
[
]
delimiters; avoids |||||||||||||||||||| leaning toothpick syndrom
||
terminators
□

keyboard driven environments means direction is not dependent on scroll wheels
just rotate numbers and every"-thing"
the matrix
